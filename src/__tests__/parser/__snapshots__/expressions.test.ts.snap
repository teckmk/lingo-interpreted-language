// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Parser - Expressions Assignment expressions should parse assignment expressions 1`] = `
{
  "body": [
    {
      "assigne": {
        "kind": "Identifier",
        "symbol": {
          "position": {
            "end": {
              "column": 2,
              "line": 1,
            },
            "start": {
              "column": 1,
              "line": 1,
            },
          },
          "value": "a",
        },
      },
      "kind": "AssignmentExpr",
      "value": {
        "kind": "NumericLiteral",
        "value": {
          "position": {
            "end": {
              "column": 6,
              "line": 1,
            },
            "start": {
              "column": 5,
              "line": 1,
            },
          },
          "value": 1,
        },
      },
    },
  ],
  "kind": "Program",
}
`;

exports[`Parser - Expressions Assignment expressions should parse nested assignment expressions 1`] = `
{
  "body": [
    {
      "assigne": {
        "kind": "Identifier",
        "symbol": {
          "position": {
            "end": {
              "column": 2,
              "line": 1,
            },
            "start": {
              "column": 1,
              "line": 1,
            },
          },
          "value": "a",
        },
      },
      "kind": "AssignmentExpr",
      "value": {
        "assigne": {
          "kind": "Identifier",
          "symbol": {
            "position": {
              "end": {
                "column": 6,
                "line": 1,
              },
              "start": {
                "column": 5,
                "line": 1,
              },
            },
            "value": "b",
          },
        },
        "kind": "AssignmentExpr",
        "value": {
          "kind": "NumericLiteral",
          "value": {
            "position": {
              "end": {
                "column": 10,
                "line": 1,
              },
              "start": {
                "column": 9,
                "line": 1,
              },
            },
            "value": 1,
          },
        },
      },
    },
  ],
  "kind": "Program",
}
`;

exports[`Parser - Expressions Binary expressions should parse binary expressions 1`] = `
{
  "body": [
    {
      "kind": "BinaryExpr",
      "left": {
        "kind": "NumericLiteral",
        "value": {
          "position": {
            "end": {
              "column": 2,
              "line": 1,
            },
            "start": {
              "column": 1,
              "line": 1,
            },
          },
          "value": 1,
        },
      },
      "operator": {
        "position": {
          "end": {
            "column": 4,
            "line": 1,
          },
          "start": {
            "column": 3,
            "line": 1,
          },
        },
        "value": "+",
      },
      "right": {
        "kind": "NumericLiteral",
        "value": {
          "position": {
            "end": {
              "column": 6,
              "line": 1,
            },
            "start": {
              "column": 5,
              "line": 1,
            },
          },
          "value": 2,
        },
      },
    },
  ],
  "kind": "Program",
}
`;

exports[`Parser - Expressions Binary expressions should parse nested binary expressions 1`] = `
{
  "body": [
    {
      "kind": "BinaryExpr",
      "left": {
        "kind": "NumericLiteral",
        "value": {
          "position": {
            "end": {
              "column": 2,
              "line": 1,
            },
            "start": {
              "column": 1,
              "line": 1,
            },
          },
          "value": 1,
        },
      },
      "operator": {
        "position": {
          "end": {
            "column": 4,
            "line": 1,
          },
          "start": {
            "column": 3,
            "line": 1,
          },
        },
        "value": "+",
      },
      "right": {
        "kind": "BinaryExpr",
        "left": {
          "kind": "NumericLiteral",
          "value": {
            "position": {
              "end": {
                "column": 6,
                "line": 1,
              },
              "start": {
                "column": 5,
                "line": 1,
              },
            },
            "value": 2,
          },
        },
        "operator": {
          "position": {
            "end": {
              "column": 8,
              "line": 1,
            },
            "start": {
              "column": 7,
              "line": 1,
            },
          },
          "value": "*",
        },
        "right": {
          "kind": "NumericLiteral",
          "value": {
            "position": {
              "end": {
                "column": 10,
                "line": 1,
              },
              "start": {
                "column": 9,
                "line": 1,
              },
            },
            "value": 3,
          },
        },
      },
    },
  ],
  "kind": "Program",
}
`;

exports[`Parser - Expressions Binary expressions should parse nested binary expressions with parenthesis 1`] = `
{
  "body": [
    {
      "kind": "BinaryExpr",
      "left": {
        "kind": "BinaryExpr",
        "left": {
          "kind": "NumericLiteral",
          "value": {
            "position": {
              "end": {
                "column": 3,
                "line": 1,
              },
              "start": {
                "column": 2,
                "line": 1,
              },
            },
            "value": 1,
          },
        },
        "operator": {
          "position": {
            "end": {
              "column": 5,
              "line": 1,
            },
            "start": {
              "column": 4,
              "line": 1,
            },
          },
          "value": "+",
        },
        "right": {
          "kind": "NumericLiteral",
          "value": {
            "position": {
              "end": {
                "column": 7,
                "line": 1,
              },
              "start": {
                "column": 6,
                "line": 1,
              },
            },
            "value": 2,
          },
        },
      },
      "operator": {
        "position": {
          "end": {
            "column": 10,
            "line": 1,
          },
          "start": {
            "column": 9,
            "line": 1,
          },
        },
        "value": "*",
      },
      "right": {
        "kind": "NumericLiteral",
        "value": {
          "position": {
            "end": {
              "column": 12,
              "line": 1,
            },
            "start": {
              "column": 11,
              "line": 1,
            },
          },
          "value": 3,
        },
      },
    },
  ],
  "kind": "Program",
}
`;

exports[`Parser - Expressions Binary expressions should parse nested binary expressions with parenthesis 2`] = `
{
  "body": [
    {
      "kind": "BinaryExpr",
      "left": {
        "kind": "NumericLiteral",
        "value": {
          "position": {
            "end": {
              "column": 2,
              "line": 1,
            },
            "start": {
              "column": 1,
              "line": 1,
            },
          },
          "value": 1,
        },
      },
      "operator": {
        "position": {
          "end": {
            "column": 4,
            "line": 1,
          },
          "start": {
            "column": 3,
            "line": 1,
          },
        },
        "value": "+",
      },
      "right": {
        "kind": "BinaryExpr",
        "left": {
          "kind": "NumericLiteral",
          "value": {
            "position": {
              "end": {
                "column": 7,
                "line": 1,
              },
              "start": {
                "column": 6,
                "line": 1,
              },
            },
            "value": 2,
          },
        },
        "operator": {
          "position": {
            "end": {
              "column": 9,
              "line": 1,
            },
            "start": {
              "column": 8,
              "line": 1,
            },
          },
          "value": "*",
        },
        "right": {
          "kind": "NumericLiteral",
          "value": {
            "position": {
              "end": {
                "column": 11,
                "line": 1,
              },
              "start": {
                "column": 10,
                "line": 1,
              },
            },
            "value": 3,
          },
        },
      },
    },
  ],
  "kind": "Program",
}
`;

exports[`Parser - Expressions Binary expressions should parse nested binary expressions with parenthesis 3`] = `
{
  "body": [
    {
      "kind": "BinaryExpr",
      "left": {
        "kind": "BinaryExpr",
        "left": {
          "kind": "NumericLiteral",
          "value": {
            "position": {
              "end": {
                "column": 2,
                "line": 1,
              },
              "start": {
                "column": 1,
                "line": 1,
              },
            },
            "value": 1,
          },
        },
        "operator": {
          "position": {
            "end": {
              "column": 4,
              "line": 1,
            },
            "start": {
              "column": 3,
              "line": 1,
            },
          },
          "value": "+",
        },
        "right": {
          "kind": "BinaryExpr",
          "left": {
            "kind": "NumericLiteral",
            "value": {
              "position": {
                "end": {
                  "column": 7,
                  "line": 1,
                },
                "start": {
                  "column": 6,
                  "line": 1,
                },
              },
              "value": 2,
            },
          },
          "operator": {
            "position": {
              "end": {
                "column": 9,
                "line": 1,
              },
              "start": {
                "column": 8,
                "line": 1,
              },
            },
            "value": "*",
          },
          "right": {
            "kind": "NumericLiteral",
            "value": {
              "position": {
                "end": {
                  "column": 11,
                  "line": 1,
                },
                "start": {
                  "column": 10,
                  "line": 1,
                },
              },
              "value": 3,
            },
          },
        },
      },
      "operator": {
        "position": {
          "end": {
            "column": 14,
            "line": 1,
          },
          "start": {
            "column": 13,
            "line": 1,
          },
        },
        "value": "+",
      },
      "right": {
        "kind": "NumericLiteral",
        "value": {
          "position": {
            "end": {
              "column": 16,
              "line": 1,
            },
            "start": {
              "column": 15,
              "line": 1,
            },
          },
          "value": 4,
        },
      },
    },
  ],
  "kind": "Program",
}
`;

exports[`Parser - Expressions Call expressions should parse call expressions 1`] = `
{
  "body": [
    {
      "args": [],
      "caller": {
        "kind": "Identifier",
        "symbol": {
          "position": {
            "end": {
              "column": 4,
              "line": 1,
            },
            "start": {
              "column": 1,
              "line": 1,
            },
          },
          "value": "foo",
        },
      },
      "kind": "CallExpr",
    },
  ],
  "kind": "Program",
}
`;

exports[`Parser - Expressions Call expressions should parse call expressions with arguments 1`] = `
{
  "body": [
    {
      "args": [
        {
          "kind": "NumericLiteral",
          "value": {
            "position": {
              "end": {
                "column": 6,
                "line": 1,
              },
              "start": {
                "column": 5,
                "line": 1,
              },
            },
            "value": 1,
          },
        },
        {
          "kind": "NumericLiteral",
          "value": {
            "position": {
              "end": {
                "column": 9,
                "line": 1,
              },
              "start": {
                "column": 8,
                "line": 1,
              },
            },
            "value": 2,
          },
        },
      ],
      "caller": {
        "kind": "Identifier",
        "symbol": {
          "position": {
            "end": {
              "column": 4,
              "line": 1,
            },
            "start": {
              "column": 1,
              "line": 1,
            },
          },
          "value": "foo",
        },
      },
      "kind": "CallExpr",
    },
  ],
  "kind": "Program",
}
`;

exports[`Parser - Expressions Identifier expressions should parse identifier expressions 1`] = `
{
  "body": [
    {
      "kind": "Identifier",
      "symbol": {
        "position": {
          "end": {
            "column": 4,
            "line": 1,
          },
          "start": {
            "column": 1,
            "line": 1,
          },
        },
        "value": "foo",
      },
    },
  ],
  "kind": "Program",
}
`;

exports[`Parser - Expressions Member expressions should parse member expressions 1`] = `
{
  "body": [
    {
      "computed": false,
      "kind": "MemberExpr",
      "object": {
        "kind": "Identifier",
        "symbol": {
          "position": {
            "end": {
              "column": 2,
              "line": 1,
            },
            "start": {
              "column": 1,
              "line": 1,
            },
          },
          "value": "a",
        },
      },
      "property": {
        "kind": "Identifier",
        "symbol": {
          "position": {
            "end": {
              "column": 4,
              "line": 1,
            },
            "start": {
              "column": 3,
              "line": 1,
            },
          },
          "value": "b",
        },
      },
    },
  ],
  "kind": "Program",
}
`;

exports[`Parser - Expressions Numeric literal expressions should parse numeric literal expressions 1`] = `
{
  "body": [
    {
      "kind": "NumericLiteral",
      "value": {
        "position": {
          "end": {
            "column": 2,
            "line": 1,
          },
          "start": {
            "column": 1,
            "line": 1,
          },
        },
        "value": 1,
      },
    },
  ],
  "kind": "Program",
}
`;

exports[`Parser - Expressions String literal expressions should parse string literal expressions 1`] = `
{
  "body": [
    {
      "expressions": {},
      "identifiers": [],
      "kind": "StringLiteral",
      "value": {
        "position": {
          "end": {
            "column": 6,
            "line": 1,
          },
          "start": {
            "column": 1,
            "line": 1,
          },
        },
        "value": "foo",
      },
    },
  ],
  "kind": "Program",
}
`;
